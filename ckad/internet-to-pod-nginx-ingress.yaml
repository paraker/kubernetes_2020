apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: ingress-nginx
  name: example-ingress
  annotations:
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
        - path: /
          backend:
            serviceName: nginx
            servicePort: 80
        - path: /apple
          backend:
            serviceName: apple-service
            servicePort: 5678
        - path: /banana
          backend:
            serviceName: banana-service
            servicePort: 5678
        - path: /tcp-echo
          backend:
            serviceName: tcp-echo
            servicePort: 8080
---
apiVersion: apps/v1  # deployments use the apps/v1 api
kind: Deployment     # mandatory kind
metadata:            # mandatory metadata
  namespace: ingress-nginx
  name: nginx
spec:
  replicas: 2        # count of pods replicas
  selector:          # provide a way for the deployment to select pods to be part of this deployment
    matchLabels:     # will match on pod labels
      app: nginx     # match any pods with label "app" = "nginx". Important, must match the template labels!
  template:          # desired state for pods in this deployment
    metadata:        # metadata to be passed to pods
      labels:        # labels that will be passed to pods
        app: nginx   # set label "app": "nginx" for all pods. Important for the selector!
    spec:
      containers:
      - name: nginx
        image: nginxdemos/hello
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: ingress-nginx
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
  type: ClusterIP
---
kind: Pod
apiVersion: v1
metadata:
  namespace: ingress-nginx
  name: apple-app
  labels:
    app: apple
spec:
  containers:
    - name: apple-app
      image: hashicorp/http-echo
      args:
        - "-text=You've reached the apple service"
---
kind: Service
apiVersion: v1
metadata:
  namespace: ingress-nginx
  name: apple-service
spec:
  selector:
    app: apple
  ports:
    - port: 5678 # Default port for image
---
kind: Pod
apiVersion: v1
metadata:
  namespace: ingress-nginx
  name: banana-app
  labels:
    app: banana
spec:
  containers:
    - name: banana-app
      image: hashicorp/http-echo
      args:
        - "-text=You've reached the banana service"
---
kind: Service
apiVersion: v1
metadata:
  namespace: ingress-nginx
  name: banana-service
spec:
  selector:
    app: banana
  ports:
    - port: 5678 # Default port for image
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: ingress-nginx
  name: tcp-echo
  labels:
    app: tcp-echo
    system: example
spec:
  replicas: 3
  selector:
    matchLabels:
      app: tcp-echo
  template:
    metadata:
      labels:
        app: tcp-echo
        system: example
    spec:
      containers:
        - name: tcp-echo-container
          image: cjimti/go-echo:latest
          imagePullPolicy: Always
          env:
            - name: TCP_PORT
              value: "8080"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
          ports:
            - name: tcp-echo-port
              containerPort: 8080
---
---
apiVersion: v1
kind: Service
metadata:
  name: tcp-echo
  namespace: ingress-nginx
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: tcp-echo
